{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\davit\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Chakra Ui\\\\memorygame\\\\src\\\\components\\\\game\\\\game.jsx\",\n  _s = $RefreshSig$();\nimport { Box, Flex, Image, Text } from \"@chakra-ui/react\";\nimport shrek from \"../../images/shrek.jfif\";\nimport esh from \"../../images/esh.jfif\";\nimport fiona from \"../../images/Fiona.png\";\nimport fandom from \"../../images/fandom.webp\";\nimport feya from \"../../images/feya.png\";\nimport godfather from \"../../images/godfather.png\";\nimport alpachino from \"../../images/alpachino.png\";\nimport hz from \"../../images/hz.png\";\nimport fredo from \"../../images/fredo.png\";\nimport sonny from \"../../images/sonny.png\";\nimport React, { useState, useEffect } from \"react\";\nimport { shuffleArray } from \"../../helpers/shuffleArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = [fiona, shrek, esh, fandom, feya, godfather, alpachino, hz, fredo, sonny];\nexport default function Header() {\n  _s();\n  const [firstOpened, setFirstOpened] = useState(null);\n  const [secondOpened, setSecondOpened] = useState(null);\n  const [thirdOpened, setThirdOpened] = useState(null);\n  const [gameImages, setGameImages] = useState([]);\n  const [matchedIndices, setMatchedIndices] = useState([]);\n  const [matchedCount, setMatchedCount] = useState(0);\n  useEffect(() => {\n    const shuffledImages = shuffleArray(images.concat(images));\n    setGameImages(shuffledImages);\n  }, []);\n  useEffect(() => {\n    if (matchedCount === images.length * 2) {\n      const element = document.getElementById('full');\n      if (element) {\n        // Log a message and hide the element\n        console.log('Все карты открыты!', element);\n        element.style.display = 'none';\n      }\n    }\n  }, [matchedCount]);\n  const handleCardClick = index => {\n    if (matchedIndices.includes(index)) return;\n    if (firstOpened === null) {\n      setFirstOpened(index);\n    } else if (secondOpened === null && index !== firstOpened) {\n      setSecondOpened(index);\n      checkMatch(index);\n    } else if (thirdOpened === null && index !== firstOpened && index !== secondOpened) {\n      setThirdOpened(index);\n      checkMatch(index, true);\n    } else if (thirdOpened === null && index !== firstOpened && index !== secondOpened) {\n      checkMatch(false);\n    }\n  };\n  const checkMatch = (index, isThirdCard = false) => {\n    if (!isThirdCard) {\n      if (gameImages[firstOpened] === gameImages[index]) {\n        setMatchedIndices(prev => [...prev, firstOpened, index]);\n        setMatchedCount(prev => prev + 2);\n        setFirstOpened(null);\n        setSecondOpened(null);\n      } else {\n        setTimeout(() => {\n          setFirstOpened(null);\n          setSecondOpened(null);\n        }, 1000);\n      }\n    } else {\n      if (gameImages[firstOpened] === gameImages[index] || gameImages[secondOpened] === gameImages[index]) {\n        setMatchedIndices(prev => [...prev, index]);\n        setMatchedCount(prev => prev + 1);\n        setFirstOpened(null);\n        setSecondOpened(null);\n        setThirdOpened(null);\n      } else {\n        setTimeout(() => {\n          setFirstOpened(null);\n          setSecondOpened(null);\n          setThirdOpened(null);\n        }, 1000);\n      }\n    }\n  };\n  const isOpen = index => {\n    return index === firstOpened || index === secondOpened || index === thirdOpened || matchedIndices.includes(index);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: \"full\",\n    mt: \"90\",\n    ml: \"400\",\n    bg: \"green\",\n    width: \"700px\",\n    height: \"620px\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"50px\",\n        fontWeight: \"1000\",\n        fontFamily: \"Libre Baskerville\",\n        pt: \"6\",\n        textAlign: \"center\",\n        color: \"white\",\n        children: \"Memory Game!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"space-between\",\n      wrap: \"wrap\",\n      p: \"6\",\n      children: gameImages.map((img, index) => {\n        return /*#__PURE__*/_jsxDEV(Box, {\n          mt: 5,\n          onClick: () => handleCardClick(index),\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          bg: \"white\",\n          width: \"120px\",\n          height: \"100px\",\n          border: isOpen(index) ? \"2px solid red\" : \"2px solid transparent\",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            style: {\n              display: isOpen(index) ? \"block\" : \"none\"\n            },\n            id: \"shrek\",\n            width: \"110px\",\n            height: \"90px\",\n            src: img\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"kJWxCvZIqXVSoPNFE/DRo62F3IM=\");\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["Box","Flex","Image","Text","shrek","esh","fiona","fandom","feya","godfather","alpachino","hz","fredo","sonny","React","useState","useEffect","shuffleArray","jsxDEV","_jsxDEV","images","Header","_s","firstOpened","setFirstOpened","secondOpened","setSecondOpened","thirdOpened","setThirdOpened","gameImages","setGameImages","matchedIndices","setMatchedIndices","matchedCount","setMatchedCount","shuffledImages","concat","length","element","document","getElementById","console","log","style","display","handleCardClick","index","includes","checkMatch","isThirdCard","prev","setTimeout","isOpen","className","mt","ml","bg","width","height","children","fontSize","fontWeight","fontFamily","pt","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","justifyContent","wrap","p","map","img","onClick","alignItems","border","id","src","_c","$RefreshReg$"],"sources":["C:/Users/davit/OneDrive/Рабочий стол/Chakra Ui/memorygame/src/components/game/game.jsx"],"sourcesContent":["import { Box, Flex, Image, Text } from \"@chakra-ui/react\";\r\nimport shrek from \"../../images/shrek.jfif\";\r\nimport esh from \"../../images/esh.jfif\";\r\nimport fiona from \"../../images/Fiona.png\";\r\nimport fandom from \"../../images/fandom.webp\";\r\nimport feya from \"../../images/feya.png\";\r\nimport godfather from \"../../images/godfather.png\";\r\nimport alpachino from \"../../images/alpachino.png\";\r\nimport hz from \"../../images/hz.png\";\r\nimport fredo from \"../../images/fredo.png\";\r\nimport sonny from \"../../images/sonny.png\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { shuffleArray } from \"../../helpers/shuffleArray\";\r\n\r\nconst images = [\r\n  fiona,\r\n  shrek,\r\n  esh,\r\n  fandom,\r\n  feya,\r\n  godfather,\r\n  alpachino,\r\n  hz,\r\n  fredo,\r\n  sonny,\r\n];\r\n\r\nexport default function Header() {\r\n  const [firstOpened, setFirstOpened] = useState(null);\r\n  const [secondOpened, setSecondOpened] = useState(null);\r\n  const [thirdOpened, setThirdOpened] = useState(null);\r\n  const [gameImages, setGameImages] = useState([]);\r\n  const [matchedIndices, setMatchedIndices] = useState([]);\r\n  const [matchedCount, setMatchedCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const shuffledImages = shuffleArray(images.concat(images));\r\n    setGameImages(shuffledImages);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (matchedCount === images.length * 2) {\r\n      const element = document.getElementById('full');\r\n      if (element) {\r\n        // Log a message and hide the element\r\n        console.log('Все карты открыты!', element);\r\n        element.style.display = 'none';\r\n      }\r\n    }\r\n  }, [matchedCount, ]);\r\n\r\n  const handleCardClick = (index) => {\r\n    if (matchedIndices.includes(index)) return; \r\n\r\n    if (firstOpened === null) {\r\n      setFirstOpened(index);\r\n    } else if (secondOpened === null && index !== firstOpened) {\r\n      setSecondOpened(index);\r\n      checkMatch(index);\r\n    } else if (thirdOpened === null && index !== firstOpened && index !== secondOpened) {\r\n      setThirdOpened(index);\r\n      checkMatch(index, true);\r\n    }\r\n    else if (thirdOpened === null && index !== firstOpened && index !== secondOpened) {\r\n      checkMatch(false);\r\n    }\r\n  };\r\n\r\n  const checkMatch = (index, isThirdCard = false) => {\r\n    if (!isThirdCard) {\r\n      if (gameImages[firstOpened] === gameImages[index]) {\r\n        setMatchedIndices((prev) => [...prev, firstOpened, index]);\r\n        setMatchedCount((prev) => prev + 2);\r\n        setFirstOpened(null);\r\n        setSecondOpened(null);\r\n      } else {\r\n        setTimeout(() => {\r\n          setFirstOpened(null);\r\n          setSecondOpened(null);\r\n        }, 1000);\r\n      }\r\n    } else {\r\n      if (gameImages[firstOpened] === gameImages[index] || gameImages[secondOpened] === gameImages[index]) {\r\n        setMatchedIndices((prev) => [...prev, index]);\r\n        setMatchedCount((prev) => prev + 1);\r\n        setFirstOpened(null);\r\n        setSecondOpened(null);\r\n        setThirdOpened(null);\r\n      } else {\r\n        setTimeout(() => {\r\n          setFirstOpened(null);\r\n          setSecondOpened(null);\r\n          setThirdOpened(null);\r\n        }, 1000);\r\n      }\r\n    }\r\n  };\r\n\r\n  const isOpen = (index) => {\r\n    return (\r\n      index === firstOpened ||\r\n      index === secondOpened ||\r\n      index === thirdOpened ||\r\n      matchedIndices.includes(index)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box className=\"full\" mt=\"90\" ml=\"400\" bg=\"green\" width=\"700px\" height=\"620px\">\r\n      <Box>\r\n        <Text\r\n          fontSize=\"50px\"\r\n          fontWeight=\"1000\"\r\n          fontFamily=\"Libre Baskerville\"\r\n          pt=\"6\"\r\n          textAlign=\"center\"\r\n          color=\"white\"\r\n        >\r\n          Memory Game!\r\n        </Text>\r\n      </Box>\r\n      <Flex justifyContent=\"space-between\" wrap=\"wrap\" p=\"6\">\r\n        {gameImages.map((img, index) => {\r\n          return (\r\n            <Box\r\n              key={index}\r\n              mt={5}\r\n              onClick={() => handleCardClick(index)}\r\n              display=\"flex\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"center\"\r\n              bg=\"white\"\r\n              width=\"120px\"\r\n              height=\"100px\"\r\n              border={isOpen(index) ? \"2px solid red\" : \"2px solid transparent\"}\r\n            >\r\n              <Image\r\n                style={{ display: isOpen(index) ? \"block\" : \"none\" }}\r\n                id=\"shrek\"\r\n                width=\"110px\"\r\n                height=\"90px\"\r\n                src={img}\r\n              />\r\n            </Box>\r\n          );\r\n        })}\r\n      </Flex>\r\n    </Box>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}