{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\davit\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Chakra Ui\\\\memorygame\\\\src\\\\components\\\\Game\\\\Game.jsx\",\n  _s = $RefreshSig$();\nimport { Box, Button, Flex, Image, Text } from \"@chakra-ui/react\";\nimport shrek from \"../../images/shrek.jfif\";\nimport esh from \"../../images/esh.jfif\";\nimport fiona from \"../../images/Fiona.png\";\nimport fandom from \"../../images/fandom.webp\";\nimport feya from \"../../images/feya.png\";\nimport godfather from \"../../images/godfather.png\";\nimport alpachino from \"../../images/alpachino.png\";\nimport hz from \"../../images/hz.png\";\nimport fredo from \"../../images/fredo.png\";\nimport sonny from \"../../images/sonny.png\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { shuffleArray } from \"../../helpers/shuffleArray\";\nimport { Timer } from \"../../helpers/timer\";\nimport { keyframes } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst images = [fiona, shrek, esh, fandom, feya, godfather, alpachino, hz, fredo, sonny];\nexport default function Header() {\n  _s();\n  const [startGame, setStartGame] = useState(false);\n  const [firstOpened, setFirstOpened] = useState(null);\n  const [secondOpened, setSecondOpened] = useState(null);\n  const [thirdOpened, setThirdOpened] = useState(null);\n  const [gameImages, setGameImages] = useState([]);\n  const [matchedIndices, setMatchedIndices] = useState([]);\n  const [matchedCount, setMatchedCount] = useState(0);\n  const [allCardsMatched, setAllCardsMatched] = useState(false);\n  const gameContainerRef = useRef(null);\n  const [displayText, setDisplayText] = useState(false);\n  const initializeGame = () => {\n    const shuffledImages = shuffleArray(images.concat(images));\n    setGameImages(shuffledImages);\n    setFirstOpened(null);\n    setSecondOpened(null);\n    setThirdOpened(null);\n    setMatchedIndices([]);\n    setMatchedCount(0);\n    setAllCardsMatched(false);\n  };\n  useEffect(() => {\n    if (startGame === true) {\n      setTimeout(() => {\n        setDisplayText(\"Try again!\");\n        setStartGame(false);\n      }, 300000);\n    }\n  }, [startGame]);\n  useEffect(() => {\n    if (matchedCount === images.length * 2) {\n      setAllCardsMatched(true);\n      setStartGame(false); // остановить игру, если все карты совпадают\n    }\n  }, [matchedCount]);\n  const handleStartGame = () => {\n    initializeGame();\n    setStartGame(true);\n    setDisplayText(false); // сбросить текст после запуска новой игры\n  };\n  const handlePlayAgain = () => {\n    initializeGame();\n    setStartGame(true);\n  };\n  const handleCardClick = index => {\n    if (matchedIndices.includes(index)) return;\n    if (firstOpened === null) {\n      setFirstOpened(index);\n    } else if (secondOpened === null && index !== firstOpened) {\n      setSecondOpened(index);\n      checkMatch(index);\n    } else if (thirdOpened === null && index !== firstOpened && index !== secondOpened) {\n      setThirdOpened(index);\n      checkMatch(index, true);\n    }\n  };\n  const checkMatch = (index, isThirdCard = false) => {\n    if (!isThirdCard) {\n      if (gameImages[firstOpened] === gameImages[index]) {\n        setMatchedIndices(prev => [...prev, firstOpened, index]);\n        setMatchedCount(prev => prev + 2);\n        setFirstOpened(null);\n        setSecondOpened(null);\n      } else {\n        setTimeout(() => {\n          setFirstOpened(null);\n          setSecondOpened(null);\n        }, 1000);\n      }\n    } else {\n      if (gameImages[firstOpened] === gameImages[index] || gameImages[secondOpened] === gameImages[index]) {\n        setMatchedIndices(prev => [...prev, index]);\n        setMatchedCount(prev => prev + 1);\n        setFirstOpened(null);\n        setSecondOpened(null);\n        setThirdOpened(null);\n      } else {\n        setTimeout(() => {\n          setFirstOpened(null);\n          setSecondOpened(null);\n          setThirdOpened(null);\n        }, 1000);\n      }\n    }\n  };\n  const isOpen = index => {\n    return index === firstOpened || index === secondOpened || index === thirdOpened || matchedIndices.includes(index);\n  };\n  const fireworkAnimation = keyframes`\n    0% { transform: translate(var(--x), var(--initialY)); width: var(--initialSize); opacity: 1; }\n    50% { width: 0.5vmin; opacity: 1; }\n    100% { width: var(--finalSize); opacity: 0; }\n  `;\n  const Firework = ({\n    colors,\n    finalSize,\n    x,\n    y,\n    delay\n  }) => /*#__PURE__*/_jsxDEV(Box, {\n    className: \"firework\",\n    position: \"absolute\",\n    top: \"25%\",\n    left: \"50%\",\n    transform: \"translate(-100%, var(--y))\",\n    width: \"var(--initialSize)\",\n    aspectRatio: 1,\n    background: `radial-gradient(circle, ${colors[0]} 0.2vmin, #0000 0) 50% 0%, \n                 radial-gradient(circle, ${colors[1]} 0.2vmin, #0000 0) 100% 50%, \n                 radial-gradient(circle, ${colors[2]} 0.2vmin, #0000 0) 50% 100%, \n                 radial-gradient(circle, ${colors[3]} 0.2vmin, #0000 0) 0% 50%, \n                 radial-gradient(circle, ${colors[4]} 0.2vmin, #0000 0) 80% 90%, \n                 radial-gradient(circle, ${colors[5]} 0.2vmin, #0000 0) 95% 90%, \n                 radial-gradient(circle, ${colors[0]} 0.2vmin, #0000 0) 90% 70%, \n                 radial-gradient(circle, ${colors[1]} 0.2vmin, #0000 0) 100% 60%, \n                 radial-gradient(circle, ${colors[2]} 0.2vmin, #0000 0) 55% 80%, \n                 radial-gradient(circle, ${colors[3]} 0.2vmin, #0000 0) 70% 77%, \n                 radial-gradient(circle, ${colors[4]} 0.2vmin, #0000 0) 22% 90%, \n                 radial-gradient(circle, ${colors[5]} 0.2vmin, #0000 0) 45% 90%, \n                 radial-gradient(circle, ${colors[0]} 0.2vmin, #0000 0) 33% 70%, \n                 radial-gradient(circle, ${colors[1]} 0.2vmin, #0000 0) 10% 60%, \n                 radial-gradient(circle, ${colors[2]} 0.2vmin, #0000 0) 31% 80%, \n                 radial-gradient(circle, ${colors[3]} 0.2vmin, #0000 0) 28% 77%, \n                 radial-gradient(circle, ${colors[4]} 0.2vmin, #0000 0) 13% 72%, \n                 radial-gradient(circle, ${colors[5]} 0.2vmin, #0000 0) 80% 10%, \n                 radial-gradient(circle, ${colors[0]} 0.2vmin, #0000 0) 95% 14%, \n                 radial-gradient(circle, ${colors[1]} 0.2vmin, #0000 0) 90% 23%, \n                 radial-gradient(circle, ${colors[2]} 0.2vmin, #0000 0) 100% 43%, \n                 radial-gradient(circle, ${colors[3]} 0.2vmin, #0000 0) 85% 27%, \n                 radial-gradient(circle, ${colors[4]} 0.2vmin, #0000 0) 77% 37%, \n                 radial-gradient(circle, ${colors[5]} 0.2vmin, #0000 0) 60% 7%, \n                 radial-gradient(circle, ${colors[0]} 0.2vmin, #0000 0) 22% 14%, \n                 radial-gradient(circle, ${colors[0]} 0.2vmin, #0000 0) 45% 20%, \n                 radial-gradient(circle, ${colors[0]} 0.2vmin, #0000 0) 33% 34%, \n                 radial-gradient(circle, ${colors[0]} 0.2vmin, #0000 0) 10% 29%, \n                 radial-gradient(circle, ${colors[0]} 0.2vmin, #0000 0) 31% 20%, \n                 radial-gradient(circle, ${colors[0]} 0.2vmin, #0000 0) 28% 17%, \n                 radial-gradient(circle, ${colors[0]} 0.2vmin, #0000 0) 13% 22%`,\n    backgroundSize: \"var(--finalSize)\",\n    backgroundRepeat: \"no-repeat\",\n    style: {\n      \"--initialSize\": \"0.1vmin\",\n      \"--finalSize\": `${finalSize}vmin`,\n      \"--x\": `${x}%`,\n      \"--initialY\": \"100vmin\",\n      \"--y\": `${y}vmin`,\n      \"--animation\": `${fireworkAnimation} 1200ms linear ${delay}ms forwards`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n  const fireworks = [...Array(25)].map((_, index) => ({\n    x: Math.random() * 100,\n    y: Math.random() * 100,\n    colors: [...Array(6)].map((_, index) => `hsl(${(Math.random() * 360 + index * 30) % 360}, 100%, 50%)`),\n    delay: Math.random() * 500,\n    finalSize: Math.random() * 3 + 0.2\n  }));\n  return /*#__PURE__*/_jsxDEV(Box, {\n    textAlign: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: startGame && /*#__PURE__*/_jsxDEV(Timer, {\n        startGame: startGame,\n        setStartGame: setStartGame,\n        allCardsMatched: allCardsMatched,\n        setAllCardsMatched: setAllCardsMatched\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), allCardsMatched && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: fireworks.map((firework, index) => /*#__PURE__*/_jsxDEV(Firework, {\n          ...firework\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handlePlayAgain,\n        mt: 4,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), !startGame && !allCardsMatched && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleStartGame,\n      mt: 4,\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      ref: gameContainerRef,\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        wrap: \"wrap\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: gameImages.map((image, index) => /*#__PURE__*/_jsxDEV(Box, {\n          width: \"100px\",\n          height: \"100px\",\n          m: \"10px\",\n          bg: \"gray.200\",\n          borderRadius: \"10px\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          cursor: \"pointer\",\n          onClick: () => handleCardClick(index),\n          children: isOpen(index) && /*#__PURE__*/_jsxDEV(Image, {\n            src: image,\n            alt: \"Game card\",\n            width: \"100%\",\n            height: \"100%\",\n            objectFit: \"cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), displayText && /*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"2xl\",\n      children: displayText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"dgtWoSMvc/MSQPMbTDSokuTOyJU=\");\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["Box","Button","Flex","Image","Text","shrek","esh","fiona","fandom","feya","godfather","alpachino","hz","fredo","sonny","React","useState","useEffect","useRef","shuffleArray","Timer","keyframes","jsxDEV","_jsxDEV","Fragment","_Fragment","images","Header","_s","startGame","setStartGame","firstOpened","setFirstOpened","secondOpened","setSecondOpened","thirdOpened","setThirdOpened","gameImages","setGameImages","matchedIndices","setMatchedIndices","matchedCount","setMatchedCount","allCardsMatched","setAllCardsMatched","gameContainerRef","displayText","setDisplayText","initializeGame","shuffledImages","concat","setTimeout","length","handleStartGame","handlePlayAgain","handleCardClick","index","includes","checkMatch","isThirdCard","prev","isOpen","fireworkAnimation","Firework","colors","finalSize","x","y","delay","className","position","top","left","transform","width","aspectRatio","background","backgroundSize","backgroundRepeat","style","fileName","_jsxFileName","lineNumber","columnNumber","fireworks","Array","map","_","Math","random","textAlign","children","justifyContent","alignItems","firework","onClick","mt","ref","wrap","image","height","m","bg","borderRadius","display","cursor","src","alt","objectFit","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/davit/OneDrive/Рабочий стол/Chakra Ui/memorygame/src/components/Game/Game.jsx"],"sourcesContent":["import { Box, Button, Flex, Image, Text } from \"@chakra-ui/react\";\r\nimport shrek from \"../../images/shrek.jfif\";\r\nimport esh from \"../../images/esh.jfif\";\r\nimport fiona from \"../../images/Fiona.png\";\r\nimport fandom from \"../../images/fandom.webp\";\r\nimport feya from \"../../images/feya.png\";\r\nimport godfather from \"../../images/godfather.png\";\r\nimport alpachino from \"../../images/alpachino.png\";\r\nimport hz from \"../../images/hz.png\";\r\nimport fredo from \"../../images/fredo.png\";\r\nimport sonny from \"../../images/sonny.png\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { shuffleArray } from \"../../helpers/shuffleArray\";\r\nimport { Timer } from \"../../helpers/timer\";\r\nimport { keyframes } from \"@chakra-ui/react\";\r\n\r\nconst images = [\r\n  fiona,\r\n  shrek,\r\n  esh,\r\n  fandom,\r\n  feya,\r\n  godfather,\r\n  alpachino,\r\n  hz,\r\n  fredo,\r\n  sonny,\r\n];\r\n\r\nexport default function Header() {\r\n  const [startGame, setStartGame] = useState(false);\r\n  const [firstOpened, setFirstOpened] = useState(null);\r\n  const [secondOpened, setSecondOpened] = useState(null);\r\n  const [thirdOpened, setThirdOpened] = useState(null);\r\n  const [gameImages, setGameImages] = useState([]);\r\n  const [matchedIndices, setMatchedIndices] = useState([]);\r\n  const [matchedCount, setMatchedCount] = useState(0);\r\n  const [allCardsMatched, setAllCardsMatched] = useState(false);\r\n  const gameContainerRef = useRef(null);\r\n  const [displayText, setDisplayText] = useState(false);\r\n\r\n  const initializeGame = () => {\r\n    const shuffledImages = shuffleArray(images.concat(images));\r\n    setGameImages(shuffledImages);\r\n    setFirstOpened(null);\r\n    setSecondOpened(null);\r\n    setThirdOpened(null);\r\n    setMatchedIndices([]);\r\n    setMatchedCount(0);\r\n    setAllCardsMatched(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (startGame === true) {\r\n      setTimeout(() => {\r\n        setDisplayText(\"Try again!\");\r\n        setStartGame(false);\r\n      }, 300000); \r\n    }\r\n  }, [startGame]);\r\n\r\n  useEffect(() => {\r\n    if (matchedCount === images.length * 2) {\r\n      setAllCardsMatched(true);\r\n      setStartGame(false); // остановить игру, если все карты совпадают\r\n    }\r\n  }, [matchedCount]);\r\n\r\n  const handleStartGame = () => {\r\n    initializeGame();\r\n    setStartGame(true);\r\n    setDisplayText(false); // сбросить текст после запуска новой игры\r\n  };\r\n\r\n  const handlePlayAgain = () => {\r\n    initializeGame();\r\n    setStartGame(true);\r\n  };\r\n\r\n  const handleCardClick = (index) => {\r\n    if (matchedIndices.includes(index)) return;\r\n\r\n    if (firstOpened === null) {\r\n      setFirstOpened(index);\r\n    } else if (secondOpened === null && index !== firstOpened) {\r\n      setSecondOpened(index);\r\n      checkMatch(index);\r\n    } else if (\r\n      thirdOpened === null &&\r\n      index !== firstOpened &&\r\n      index !== secondOpened\r\n    ) {\r\n      setThirdOpened(index);\r\n      checkMatch(index, true);\r\n    }\r\n  };\r\n\r\n  const checkMatch = (index, isThirdCard = false) => {\r\n    if (!isThirdCard) {\r\n      if (gameImages[firstOpened] === gameImages[index]) {\r\n        setMatchedIndices((prev) => [...prev, firstOpened, index]);\r\n        setMatchedCount((prev) => prev + 2);\r\n        setFirstOpened(null);\r\n        setSecondOpened(null);\r\n      } else {\r\n        setTimeout(() => {\r\n          setFirstOpened(null);\r\n          setSecondOpened(null);\r\n        }, 1000);\r\n      }\r\n    } else {\r\n      if (\r\n        gameImages[firstOpened] === gameImages[index] ||\r\n        gameImages[secondOpened] === gameImages[index]\r\n      ) {\r\n        setMatchedIndices((prev) => [...prev, index]);\r\n        setMatchedCount((prev) => prev + 1);\r\n        setFirstOpened(null);\r\n        setSecondOpened(null);\r\n        setThirdOpened(null);\r\n      } else {\r\n        setTimeout(() => {\r\n          setFirstOpened(null);\r\n          setSecondOpened(null);\r\n          setThirdOpened(null);\r\n        }, 1000);\r\n      }\r\n    }\r\n  };\r\n\r\n  const isOpen = (index) => {\r\n    return (\r\n      index === firstOpened ||\r\n      index === secondOpened ||\r\n      index === thirdOpened ||\r\n      matchedIndices.includes(index)\r\n    );\r\n  };\r\n\r\n  const fireworkAnimation = keyframes`\r\n    0% { transform: translate(var(--x), var(--initialY)); width: var(--initialSize); opacity: 1; }\r\n    50% { width: 0.5vmin; opacity: 1; }\r\n    100% { width: var(--finalSize); opacity: 0; }\r\n  `;\r\n\r\n  const Firework = ({ colors, finalSize, x, y, delay }) => (\r\n    <Box\r\n      className=\"firework\"\r\n      position=\"absolute\"\r\n      top=\"25%\"\r\n      left=\"50%\"\r\n      transform=\"translate(-100%, var(--y))\"\r\n      width=\"var(--initialSize)\"\r\n      aspectRatio={1}\r\n      background={`radial-gradient(circle, ${colors[0]} 0.2vmin, #0000 0) 50% 0%, \r\n                 radial-gradient(circle, ${colors[1]} 0.2vmin, #0000 0) 100% 50%, \r\n                 radial-gradient(circle, ${colors[2]} 0.2vmin, #0000 0) 50% 100%, \r\n                 radial-gradient(circle, ${colors[3]} 0.2vmin, #0000 0) 0% 50%, \r\n                 radial-gradient(circle, ${colors[4]} 0.2vmin, #0000 0) 80% 90%, \r\n                 radial-gradient(circle, ${colors[5]} 0.2vmin, #0000 0) 95% 90%, \r\n                 radial-gradient(circle, ${colors[0]} 0.2vmin, #0000 0) 90% 70%, \r\n                 radial-gradient(circle, ${colors[1]} 0.2vmin, #0000 0) 100% 60%, \r\n                 radial-gradient(circle, ${colors[2]} 0.2vmin, #0000 0) 55% 80%, \r\n                 radial-gradient(circle, ${colors[3]} 0.2vmin, #0000 0) 70% 77%, \r\n                 radial-gradient(circle, ${colors[4]} 0.2vmin, #0000 0) 22% 90%, \r\n                 radial-gradient(circle, ${colors[5]} 0.2vmin, #0000 0) 45% 90%, \r\n                 radial-gradient(circle, ${colors[0]} 0.2vmin, #0000 0) 33% 70%, \r\n                 radial-gradient(circle, ${colors[1]} 0.2vmin, #0000 0) 10% 60%, \r\n                 radial-gradient(circle, ${colors[2]} 0.2vmin, #0000 0) 31% 80%, \r\n                 radial-gradient(circle, ${colors[3]} 0.2vmin, #0000 0) 28% 77%, \r\n                 radial-gradient(circle, ${colors[4]} 0.2vmin, #0000 0) 13% 72%, \r\n                 radial-gradient(circle, ${colors[5]} 0.2vmin, #0000 0) 80% 10%, \r\n                 radial-gradient(circle, ${colors[0]} 0.2vmin, #0000 0) 95% 14%, \r\n                 radial-gradient(circle, ${colors[1]} 0.2vmin, #0000 0) 90% 23%, \r\n                 radial-gradient(circle, ${colors[2]} 0.2vmin, #0000 0) 100% 43%, \r\n                 radial-gradient(circle, ${colors[3]} 0.2vmin, #0000 0) 85% 27%, \r\n                 radial-gradient(circle, ${colors[4]} 0.2vmin, #0000 0) 77% 37%, \r\n                 radial-gradient(circle, ${colors[5]} 0.2vmin, #0000 0) 60% 7%, \r\n                 radial-gradient(circle, ${colors[0]} 0.2vmin, #0000 0) 22% 14%, \r\n                 radial-gradient(circle, ${colors[0]} 0.2vmin, #0000 0) 45% 20%, \r\n                 radial-gradient(circle, ${colors[0]} 0.2vmin, #0000 0) 33% 34%, \r\n                 radial-gradient(circle, ${colors[0]} 0.2vmin, #0000 0) 10% 29%, \r\n                 radial-gradient(circle, ${colors[0]} 0.2vmin, #0000 0) 31% 20%, \r\n                 radial-gradient(circle, ${colors[0]} 0.2vmin, #0000 0) 28% 17%, \r\n                 radial-gradient(circle, ${colors[0]} 0.2vmin, #0000 0) 13% 22%`}\r\n      backgroundSize=\"var(--finalSize)\"\r\n      backgroundRepeat=\"no-repeat\"\r\n      style={{\r\n        \"--initialSize\": \"0.1vmin\",\r\n        \"--finalSize\": `${finalSize}vmin`,\r\n        \"--x\": `${x}%`,\r\n        \"--initialY\": \"100vmin\",\r\n        \"--y\": `${y}vmin`,\r\n        \"--animation\": `${fireworkAnimation} 1200ms linear ${delay}ms forwards`,\r\n      }}\r\n    />\r\n  );\r\n\r\n  const fireworks = [...Array(25)].map((_, index) => ({\r\n    x: Math.random() * 100,\r\n    y: Math.random() * 100,\r\n    colors: [...Array(6)].map(\r\n      (_, index) => `hsl(${(Math.random() * 360 + index * 30) % 360}, 100%, 50%)`\r\n    ),\r\n    delay: Math.random() * 500,\r\n    finalSize: Math.random() * 3 + 0.2,\r\n  }));\r\n\r\n  return (\r\n    <Box textAlign=\"center\">\r\n      <Flex justifyContent=\"center\" alignItems=\"center\">\r\n        {startGame && (\r\n          <Timer\r\n            startGame={startGame}\r\n            setStartGame={setStartGame}\r\n            allCardsMatched={allCardsMatched}\r\n            setAllCardsMatched={setAllCardsMatched}\r\n          />\r\n        )}\r\n      </Flex>\r\n\r\n      {allCardsMatched && (\r\n        <>\r\n          <Flex justifyContent=\"center\" alignItems=\"center\">\r\n            {fireworks.map((firework, index) => (\r\n              <Firework key={index} {...firework} />\r\n            ))}\r\n          </Flex>\r\n          <Button onClick={handlePlayAgain} mt={4}>\r\n            Play Again\r\n          </Button>\r\n        </>\r\n      )}\r\n\r\n      {!startGame && !allCardsMatched && (\r\n        <Button onClick={handleStartGame} mt={4}>\r\n          Start Game\r\n        </Button>\r\n      )}\r\n\r\n      <Box ref={gameContainerRef}>\r\n        <Flex wrap=\"wrap\" justifyContent=\"center\" alignItems=\"center\">\r\n          {gameImages.map((image, index) => (\r\n            <Box\r\n              key={index}\r\n              width=\"100px\"\r\n              height=\"100px\"\r\n              m=\"10px\"\r\n              bg=\"gray.200\"\r\n              borderRadius=\"10px\"\r\n              display=\"flex\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"center\"\r\n              cursor=\"pointer\"\r\n              onClick={() => handleCardClick(index)}\r\n            >\r\n              {isOpen(index) && (\r\n                <Image\r\n                  src={image}\r\n                  alt=\"Game card\"\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  objectFit=\"cover\"\r\n                />\r\n              )}\r\n            </Box>\r\n          ))}\r\n        </Flex>\r\n      </Box>\r\n\r\n      {displayText && <Text fontSize=\"2xl\">{displayText}</Text>}\r\n    </Box>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}