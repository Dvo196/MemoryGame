{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\davit\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Chakra Ui\\\\memorygame\\\\src\\\\helpers\\\\timer.js\",\n  _s = $RefreshSig$();\nimport { Box, Text } from \"@chakra-ui/react\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { TimeIcon } from 'chakra-ui-ionicons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Timer({\n  startGame,\n  setStartGame,\n  setAllCardsMatched,\n  allCardsMatched\n}) {\n  _s();\n  const timerRef = useRef(null);\n  const [timer, setTimer] = useState(\"5:00\");\n  const getTimeRemaining = endTime => {\n    const total = Date.parse(endTime) - Date.parse(new Date());\n    const seconds = Math.floor(total / 1000 % 60);\n    const minutes = Math.floor(total / 1000 / 60 % 60);\n    return {\n      total,\n      minutes,\n      seconds\n    };\n  };\n  const startTimer = endTime => {\n    const updateTimer = () => {\n      let {\n        total,\n        minutes,\n        seconds\n      } = getTimeRemaining(endTime);\n      if (total >= 0) {\n        setTimer(`${minutes}:${seconds < 10 ? \"0\" + seconds : seconds}`);\n      } else {\n        setTimer(\"0:00\");\n        clearInterval(timerRef.current);\n        setStartGame(false); // Остановить игру или выполнить другие действия по завершению таймера\n      }\n    };\n\n    // Запуск таймера с интервалом 1 секунда\n    timerRef.current = setInterval(updateTimer, 1000);\n    updateTimer(); // Запустить первое обновление таймера сразу\n  };\n  useEffect(() => {\n    if (startGame) {\n      const endTime = new Date();\n      endTime.setMinutes(endTime.getMinutes() + 5); // Установить время окончания (5 минут)\n    } else {\n      setTimer(\"5:00\");\n      clearInterval(timerRef.current);\n    }\n    return () => clearInterval(timerRef.current);\n  }, [startGame, setStartGame]);\n  if (!startGame) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n    transform: \"translate(-50px, -20px)\",\n    mt: \"-25\",\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      children: timer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TimeIcon, {\n      ml: \"3px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Timer, \"5zbr7+zTBzjy3LcTjvonBsRjBWI=\");\n_c = Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["Box","Text","React","useState","useRef","useEffect","TimeIcon","jsxDEV","_jsxDEV","Timer","startGame","setStartGame","setAllCardsMatched","allCardsMatched","_s","timerRef","timer","setTimer","getTimeRemaining","endTime","total","Date","parse","seconds","Math","floor","minutes","startTimer","updateTimer","clearInterval","current","setInterval","setMinutes","getMinutes","display","justifyContent","alignItems","transform","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","ml","_c","$RefreshReg$"],"sources":["C:/Users/davit/OneDrive/Рабочий стол/Chakra Ui/memorygame/src/helpers/timer.js"],"sourcesContent":["import { Box, Text } from \"@chakra-ui/react\";\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport { TimeIcon } from 'chakra-ui-ionicons';\r\n\r\nexport function Timer({ startGame, setStartGame, setAllCardsMatched , allCardsMatched }) {\r\n  const timerRef = useRef(null);\r\n  const [timer, setTimer] = useState(\"5:00\");\r\n\r\n  const getTimeRemaining = (endTime) => {\r\n    const total = Date.parse(endTime) - Date.parse(new Date());\r\n    const seconds = Math.floor((total / 1000) % 60);\r\n    const minutes = Math.floor((total / 1000 / 60) % 60);\r\n    return {\r\n      total,\r\n      minutes,\r\n      seconds,\r\n    };\r\n  };\r\n\r\n  const startTimer = (endTime) => {\r\n    const updateTimer = () => {\r\n      let { total, minutes, seconds } = getTimeRemaining(endTime);\r\n      if (total >= 0) {\r\n        setTimer(\r\n          `${minutes}:${seconds < 10 ? \"0\" + seconds : seconds}`\r\n        );\r\n      } else {\r\n        setTimer(\"0:00\");\r\n        clearInterval(timerRef.current);\r\n        setStartGame(false); // Остановить игру или выполнить другие действия по завершению таймера\r\n      }\r\n    };\r\n\r\n    // Запуск таймера с интервалом 1 секунда\r\n    timerRef.current = setInterval(updateTimer, 1000);\r\n    updateTimer(); // Запустить первое обновление таймера сразу\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (startGame) {\r\n      const endTime = new Date();\r\n      endTime.setMinutes(endTime.getMinutes() + 5 ); // Установить время окончания (5 минут)\r\n    } else {\r\n      setTimer(\"5:00\"); \r\n      clearInterval(timerRef.current);\r\n    }\r\n\r\n    return () => clearInterval(timerRef.current);\r\n  }, [startGame, setStartGame]);\r\n\r\n\r\n  \r\n \r\n  if (!startGame) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Box display=\"flex\" justifyContent=\"flex-end\" alignItems=\"center\" transform=\"translate(-50px, -20px)\" mt=\"-25\" >\r\n\r\n      <Text >{timer}</Text>\r\n        <TimeIcon ml=\"3px\"/>\r\n    </Box>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}