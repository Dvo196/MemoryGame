{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\davit\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Chakra Ui\\\\memorygame\\\\src\\\\helpers\\\\timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // We need ref in this, because we are dealing\n  // with JS setInterval to keep track of it and\n  // stop it when needed\n  const Ref = useRef(null);\n\n  // The state for our timer\n  const [timer, setTimer] = useState(\"5:00\");\n  const getTimeRemaining = e => {\n    const total = Date.parse(e) - Date.parse(new Date());\n    const seconds = Math.floor(total / 1000 % 60);\n    const minutes = Math.floor(total / 1000 / 60 % 60);\n    return {\n      total,\n      minutes,\n      seconds\n    };\n  };\n  const startTimer = e => {\n    let {\n      total,\n      minutes,\n      seconds\n    } = getTimeRemaining(e);\n    if (total >= 0) {\n      setTimer(minutes + \":\" + (seconds > 9 ? seconds : \"0\" + seconds));\n    }\n  };\n  const clearTimer = e => {\n    // Set initial time to 5:00\n    setTimer(\"5:00\");\n\n    // If you try to remove this line the\n    // updating of timer Variable will be\n    // after 1000ms or 1sec\n    if (Ref.current) clearInterval(Ref.current);\n    const id = setInterval(() => {\n      startTimer(e);\n    }, 1000);\n    Ref.current = id;\n  };\n  const getDeadTime = () => {\n    let deadline = new Date();\n\n    // Set the deadline to 5 minutes from now\n    deadline.setMinutes(deadline.getMinutes() + 5);\n    return deadline;\n  };\n\n  // We can use useEffect so that when the component\n  // mount the timer will start as soon as possible\n\n  // We put empty array to act as componentDid\n  // mount only\n  useEffect(() => {\n    clearTimer(getDeadTime());\n  }, []);\n\n  // Another way to call the clearTimer() to start\n  // the countdown is via action event from the\n  // button first we create function to be called\n  // by the button\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      margin: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"green\"\n      },\n      children: \"GeeksforGeeks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Countdown Timer Using React JS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: timer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClickReset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 3\n  }, this);\n};\n_s(App, \"NP73fJ1TKblldTDf/fTZrcauepY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","Ref","timer","setTimer","getTimeRemaining","e","total","Date","parse","seconds","Math","floor","minutes","startTimer","clearTimer","current","clearInterval","id","setInterval","getDeadTime","deadline","setMinutes","getMinutes","style","textAlign","margin","children","color","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onClickReset","_c","$RefreshReg$"],"sources":["C:/Users/davit/OneDrive/Рабочий стол/Chakra Ui/memorygame/src/helpers/timer.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nconst App = () => {\r\n\t// We need ref in this, because we are dealing\r\n\t// with JS setInterval to keep track of it and\r\n\t// stop it when needed\r\n\tconst Ref = useRef(null);\r\n\r\n\t// The state for our timer\r\n\tconst [timer, setTimer] = useState(\"5:00\");\r\n\r\n\tconst getTimeRemaining = (e) => {\r\n\t\tconst total = Date.parse(e) - Date.parse(new Date());\r\n\t\tconst seconds = Math.floor((total / 1000) % 60);\r\n\t\tconst minutes = Math.floor((total / 1000 / 60) % 60);\r\n\t\treturn {\r\n\t\t\ttotal,\r\n\t\t\tminutes,\r\n\t\t\tseconds,\r\n\t\t};\r\n\t};\r\n\r\n\tconst startTimer = (e) => {\r\n\t\tlet { total, minutes, seconds } = getTimeRemaining(e);\r\n\t\tif (total >= 0) {\r\n\t\t\tsetTimer(\r\n\t\t\t\tminutes + \":\" +\r\n\t\t\t\t(seconds > 9 ? seconds : \"0\" + seconds)\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tconst clearTimer = (e) => {\r\n\t\t// Set initial time to 5:00\r\n\t\tsetTimer(\"5:00\");\r\n\r\n\t\t// If you try to remove this line the\r\n\t\t// updating of timer Variable will be\r\n\t\t// after 1000ms or 1sec\r\n\t\tif (Ref.current) clearInterval(Ref.current);\r\n\t\tconst id = setInterval(() => {\r\n\t\t\tstartTimer(e);\r\n\t\t}, 1000);\r\n\t\tRef.current = id;\r\n\t};\r\n\r\n\tconst getDeadTime = () => {\r\n\t\tlet deadline = new Date();\r\n\r\n\t\t// Set the deadline to 5 minutes from now\r\n\t\tdeadline.setMinutes(deadline.getMinutes() + 5);\r\n\t\treturn deadline;\r\n\t};\r\n\r\n\t// We can use useEffect so that when the component\r\n\t// mount the timer will start as soon as possible\r\n\r\n\t// We put empty array to act as componentDid\r\n\t// mount only\r\n\tuseEffect(() => {\r\n\t\tclearTimer(getDeadTime());\r\n\t}, []);\r\n\r\n\t// Another way to call the clearTimer() to start\r\n\t// the countdown is via action event from the\r\n\t// button first we create function to be called\r\n\t// by the button\r\n\t\r\n\r\n\treturn (\r\n\t\t<div style={{ textAlign: \"center\", margin: \"auto\" }}>\r\n\t\t\t<h1 style={{ color: \"green\" }}>\r\n\t\t\t\tGeeksforGeeks\r\n\t\t\t</h1>\r\n\t\t\t<h3>Countdown Timer Using React JS</h3>\r\n\t\t\t<h2>{timer}</h2>\r\n\t\t\t<button onClick={onClickReset}>Reset</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}