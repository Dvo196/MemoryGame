{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\davit\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Chakra Ui\\\\memorygame\\\\src\\\\components\\\\game\\\\game.jsx\",\n  _s = $RefreshSig$();\nimport { Box, Flex, Image, Text } from \"@chakra-ui/react\";\nimport shrek from \"../../images/shrek.jfif\";\nimport esh from \"../../images/esh.jfif\";\nimport fiona from \"../../images/Fiona.png\";\nimport fandom from \"../../images/fandom.webp\";\nimport feya from \"../../images/feya.png\";\nimport godfather from \"../../images/godfather.png\";\nimport alpachino from \"../../images/alpachino.png\";\nimport hz from \"../../images/hz.png\";\nimport fredo from \"../../images/fredo.png\";\nimport sonny from \"../../images/sonny.png\";\nimport React, { useState, useEffect } from \"react\";\nimport { shuffleArray } from \"../../helpers/shuffleArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = [fiona, shrek, esh, fandom, feya, godfather, alpachino, hz, fredo, sonny];\nexport default function Header() {\n  _s();\n  const [openedCardIndex, setOpenedCardIndex] = useState(null);\n  const [gameImages, setGameImages] = useState([]);\n  useEffect(() => {\n    const shuffledImages = shuffleArray(images.concat(images));\n    setGameImages(shuffledImages);\n  }, []);\n  const handleCardClick = index => {\n    if (openedCardIndex === null) {\n      // Если ни одна карточка не открыта, открываем текущую\n      setOpenedCardIndex(index);\n    } else {\n      // Если уже есть открытая карточка, проверяем совпадение\n      if (index !== openedCardIndex) {\n        // Если индексы не совпадают (открытые карточки разные), закрываем их\n        setTimeout(() => {\n          setOpenedCardIndex(null);\n        }, 1000);\n      } else {}\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: \"90\",\n    ml: \"400\",\n    bg: \"green\",\n    width: \"700px\",\n    height: \"620px\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"50px\",\n        fontWeight: \"1000\",\n        fontFamily: \"Libre Baskerville\",\n        pt: \"6\",\n        textAlign: \"center\",\n        color: \"white\",\n        children: \"Memory game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: \"space-between\",\n      wrap: \"wrap\",\n      p: \"6\",\n      children: gameImages.map((img, index) => /*#__PURE__*/_jsxDEV(Box, {\n        mt: 5,\n        onClick: () => handleCardClick(index),\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        bg: \"white\",\n        width: \"120px\",\n        height: \"100px\",\n        border: openedCardIndex === index ? \"2px solid red\" : \"2px solid transparent\" // Условное применение рамки\n        ,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          style: {\n            display: openedCardIndex === index ? \"block\" : \"none\"\n          },\n          id: \"shrek\",\n          width: \"110px\",\n          height: \"90px\",\n          src: img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"nnp9dGUi03XOv+MBYX0aVuBruIo=\");\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["Box","Flex","Image","Text","shrek","esh","fiona","fandom","feya","godfather","alpachino","hz","fredo","sonny","React","useState","useEffect","shuffleArray","jsxDEV","_jsxDEV","images","Header","_s","openedCardIndex","setOpenedCardIndex","gameImages","setGameImages","shuffledImages","concat","handleCardClick","index","setTimeout","mt","ml","bg","width","height","children","fontSize","fontWeight","fontFamily","pt","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","justifyContent","wrap","p","map","img","onClick","display","alignItems","border","style","id","src","_c","$RefreshReg$"],"sources":["C:/Users/davit/OneDrive/Рабочий стол/Chakra Ui/memorygame/src/components/game/game.jsx"],"sourcesContent":["import { Box, Flex, Image, Text } from \"@chakra-ui/react\";\r\nimport shrek from \"../../images/shrek.jfif\";\r\nimport esh from \"../../images/esh.jfif\";\r\nimport fiona from \"../../images/Fiona.png\";\r\nimport fandom from \"../../images/fandom.webp\";\r\nimport feya from \"../../images/feya.png\";\r\nimport godfather from \"../../images/godfather.png\";\r\nimport alpachino from \"../../images/alpachino.png\";\r\nimport hz from \"../../images/hz.png\";\r\nimport fredo from \"../../images/fredo.png\";\r\nimport sonny from \"../../images/sonny.png\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { shuffleArray } from \"../../helpers/shuffleArray\";\r\n\r\nconst images = [\r\n  fiona,\r\n  shrek,\r\n  esh,\r\n  fandom,\r\n  feya,\r\n  godfather,\r\n  alpachino,\r\n  hz,\r\n  fredo,\r\n  sonny,\r\n];\r\n\r\nexport default function Header() {\r\n  const [openedCardIndex, setOpenedCardIndex] = useState(null);\r\n  const [gameImages, setGameImages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const shuffledImages = shuffleArray(images.concat(images));\r\n    setGameImages(shuffledImages);\r\n  }, []);\r\n\r\n  const handleCardClick = (index) => {\r\n    if (openedCardIndex === null) {\r\n      // Если ни одна карточка не открыта, открываем текущую\r\n      setOpenedCardIndex(index);\r\n    } else {\r\n      // Если уже есть открытая карточка, проверяем совпадение\r\n      if (index !== openedCardIndex) {\r\n        // Если индексы не совпадают (открытые карточки разные), закрываем их\r\n        setTimeout(() => {\r\n          setOpenedCardIndex(null);\r\n        }, 1000);\r\n      } else {\r\n        \r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box mt=\"90\" ml=\"400\" bg=\"green\" width=\"700px\" height=\"620px\">\r\n      <Box>\r\n        <Text\r\n          fontSize=\"50px\"\r\n          fontWeight=\"1000\"\r\n          fontFamily=\"Libre Baskerville\"\r\n          pt=\"6\"\r\n          textAlign=\"center\"\r\n          color=\"white\"\r\n        >\r\n          Memory game\r\n        </Text>\r\n      </Box>\r\n      <Flex justifyContent=\"space-between\" wrap=\"wrap\" p=\"6\">\r\n        {gameImages.map((img, index) => (\r\n          <Box\r\n            key={index}\r\n            mt={5}\r\n            onClick={() => handleCardClick(index)}\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            bg=\"white\"\r\n            width=\"120px\"\r\n            height=\"100px\"\r\n            border={openedCardIndex === index ? \"2px solid red\" : \"2px solid transparent\"} // Условное применение рамки\r\n          >\r\n            <Image\r\n              style={{ display: openedCardIndex === index ? \"block\" : \"none\" }}\r\n              id=\"shrek\"\r\n              width=\"110px\"\r\n              height=\"90px\"\r\n              src={img}\r\n            />\r\n          </Box>\r\n        ))}\r\n      </Flex>\r\n    </Box>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}