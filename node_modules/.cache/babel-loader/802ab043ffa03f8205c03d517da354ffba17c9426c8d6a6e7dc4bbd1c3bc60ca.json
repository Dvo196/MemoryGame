{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\davit\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\Chakra Ui\\\\memorygame\\\\src\\\\components\\\\game\\\\game.jsx\",\n  _s = $RefreshSig$();\nimport { Box, Button, Center, Flex, Icon, Image, Spacer, Text } from \"@chakra-ui/react\";\n// import phoneimg from \"../../images/phone.png\"\nimport shrek from \"../../images/shrek.jfif\";\nimport esh from \"../../images/esh.jfif\";\nimport fiona from \"../../images/Fiona.png\";\nimport fandom from \"../../images/fandom.webp\";\nimport feya from \"../../images/feya.png\";\nimport godfather from \"../../images/godfather.png\";\nimport alpachino from \"../../images/alpachino.png\";\nimport hz from \"../../images/hz.png\";\nimport fredo from \"../../images/fredo.png\";\nimport sonny from \"../../images/sonny.png\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst images = [fiona, shrek, esh, fandom, feya, godfather, alpachino, hz, fredo, sonny];\nconst shuffle = coll => {\n  return Array(coll.length).fill(null)\n  // возвращаем новый массив с такой же длиной и заполняем его null\n  .map((_, i) => [Math.random(), i])\n  // на каждой итерации возвращаем новый массив, в котором рандомное число и индекс элемента\n  .sort(([a], [b]) => a - b)\n  // сортируем по рандомному элементу в порядке возрастания\n  .map(([, i]) => coll[i]);\n  // возвращаем элемент по индексу, который был отсортирован\n};\nconsole.log(shuffle(numbers)); // => [10, 5, 3, 7, 2, 9, 1, 4, 6, 8]\nconsole.log(shuffle(numbers)); // => [9, 2, 6, 1, 8, 5, 7, 10, 3, 4]\nconsole.log(shuffle(numbers)); // => [8, 7, 10, 6, 3, 2, 9, 5, 4, 1]\nexport default function Header() {\n  _s();\n  const [displayStyle, setDisplayStyle] = useState(\"none\");\n  const shrekhidden = () => {\n    setDisplayStyle(\"block\");\n    console.log(888);\n  };\n  const gameImages = images.concat(images);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mt: \"90\",\n      ml: \"400\",\n      bg: \"green\",\n      width: \"700px\",\n      height: \"620px\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"50px\",\n          fontWeight: \"1000\",\n          fontFamily: \"Libre Baskerville\",\n          pt: \"6\",\n          textAlign: \"center\",\n          color: \"white\",\n          children: \"Memory game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"space-between\",\n        wrap: \"wrap\",\n        p: \"6\",\n        children: gameImages.map(img => /*#__PURE__*/_jsxDEV(Box, {\n          mt: 5,\n          onClick: shrekhidden,\n          border: \"2px solid red\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          bg: \"white\",\n          width: \"120px\",\n          height: \"100px\",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            style: {\n              display: displayStyle\n            },\n            id: \"shrek\",\n            width: \"110px\",\n            height: \"90px\",\n            src: img\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Header, \"OetAaeCFESWf2fqTsU31nwO9hXI=\");\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["Box","Button","Center","Flex","Icon","Image","Spacer","Text","shrek","esh","fiona","fandom","feya","godfather","alpachino","hz","fredo","sonny","React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","images","shuffle","coll","Array","length","fill","map","_","i","Math","random","sort","a","b","console","log","numbers","Header","_s","displayStyle","setDisplayStyle","shrekhidden","gameImages","concat","children","mt","ml","bg","width","height","fontSize","fontWeight","fontFamily","pt","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","justifyContent","wrap","p","img","onClick","border","display","alignItems","style","id","src","_c","$RefreshReg$"],"sources":["C:/Users/davit/OneDrive/Рабочий стол/Chakra Ui/memorygame/src/components/game/game.jsx"],"sourcesContent":["import {\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Flex,\r\n  Icon,\r\n  Image,\r\n  Spacer,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\n// import phoneimg from \"../../images/phone.png\"\r\nimport shrek from \"../../images/shrek.jfif\";\r\nimport esh from \"../../images/esh.jfif\";\r\nimport fiona from \"../../images/Fiona.png\";\r\nimport fandom from \"../../images/fandom.webp\";\r\nimport feya from \"../../images/feya.png\";\r\nimport godfather from \"../../images/godfather.png\";\r\nimport alpachino from \"../../images/alpachino.png\";\r\nimport hz from \"../../images/hz.png\";\r\nimport fredo from \"../../images/fredo.png\";\r\nimport sonny from \"../../images/sonny.png\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst images = [\r\n    fiona,\r\n    shrek,\r\n    esh,\r\n    fandom,\r\n    feya,\r\n    godfather,\r\n    alpachino,\r\n    hz,\r\n    fredo,\r\n    sonny,\r\n  ];\r\n  const shuffle = (coll) => {\r\n    return Array(coll.length).fill(null) \r\n    // возвращаем новый массив с такой же длиной и заполняем его null\r\n            .map((_, i) => [Math.random(), i])\r\n    // на каждой итерации возвращаем новый массив, в котором рандомное число и индекс элемента\r\n            .sort(([a], [b]) => a - b)\r\n    // сортируем по рандомному элементу в порядке возрастания\r\n            .map(([, i]) => coll[i])\r\n    // возвращаем элемент по индексу, который был отсортирован\r\n    };\r\n    \r\n    console.log(shuffle(numbers)); // => [10, 5, 3, 7, 2, 9, 1, 4, 6, 8]\r\n    console.log(shuffle(numbers)); // => [9, 2, 6, 1, 8, 5, 7, 10, 3, 4]\r\n    console.log(shuffle(numbers)); // => [8, 7, 10, 6, 3, 2, 9, 5, 4, 1]\r\nexport default function Header() {\r\n  const [displayStyle, setDisplayStyle] = useState(\"none\");\r\n\r\n  const shrekhidden = () => {\r\n    setDisplayStyle(\"block\");\r\n    console.log(888);\r\n  };\r\n\r\nconst gameImages = images.concat(images)\r\n\r\n  return (\r\n    <>\r\n      <Box mt=\"90\" ml=\"400\" bg=\"green\" width=\"700px\" height=\"620px\">\r\n        <Box>\r\n          <Text\r\n            fontSize=\"50px\"\r\n            fontWeight=\"1000\"\r\n            fontFamily=\"Libre Baskerville\"\r\n            pt=\"6\"\r\n            textAlign=\"center\"\r\n            color=\"white\"\r\n          >\r\n            Memory game\r\n          </Text>\r\n        </Box>\r\n        <Flex justifyContent=\"space-between\" wrap=\"wrap\" p=\"6\">\r\n          {gameImages.map((img) => (\r\n            <Box\r\n              mt={5}\r\n              onClick={shrekhidden}\r\n              border=\"2px solid red\"\r\n              display=\"flex\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"center\"\r\n              bg=\"white\"\r\n              width=\"120px\"\r\n              height=\"100px\"\r\n            >\r\n              <Image\r\n                style={{ display: displayStyle }}\r\n                id=\"shrek\"\r\n                width=\"110px\"\r\n                height=\"90px\"\r\n                src={img}\r\n              />\r\n            </Box>\r\n          ))}\r\n        </Flex>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}